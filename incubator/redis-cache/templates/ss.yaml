apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: "{{ template "fullname" . }}"
  labels:
     app: {{ template "fullname" . }}
     chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
     release: "{{ .Release.Name }}"
     heritage: "{{ .Release.Service }}"
spec:
  serviceName: "{{ template "fullname" . }}"
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
      annotations:
        pod.alpha.kubernetes.io/initialized: "true"
        pod.beta.kubernetes.io/init-containers: '[
           {
             "name":"sentinel-micro",
             "image":"{{ .Values.image.microSentinel }}:{{ .Values.tag.microSentinel }}",
                         "args" : ["-service","{{ template "fullname" . }}"],
             "env": [
               {
                  "name": "POD_NAMESPACE",
                  "valueFrom": {
                     "fieldRef" : {
                        "apiVersion" : "v1",
                        "fieldPath" : "metadata.namespace"
                     }
                  }
               }
             ],
            "volumeMounts": [
               {
                  "name": "config",
                  "mountPath": "/config"
               }
            ]
           }
        ]'
    spec:
      terminationGracePeriodSeconds: 5
      affinity:
           {
              podAntiAffinity: {
                 preferredDuringSchedulingIgnoredDuringExecution: [{
                      weight: 5,
                      podAffinityTerm: {
                        labelSelector: {
                           matchExpressions: [{
                               "key": "app",
                               "operator": "In",
                                "values": ["{{ template "fullname" . }}"]
                            }]
                        },
                        topologyKey: "kubernetes.io/hostname"
                      }
                  }]
               }
           }
      containers:
      - name: redis
        image: {{ .Values.image.redis }}:{{ .Values.tag.redis }}
        ports:
        - containerPort: {{ .Values.service.port }}
          name: {{ .Values.service.name }}
        resources:
{{ toYaml .Values.resources | indent 12 }}
      - name: make-slave
        image: {{ .Values.image.makeSlave }}:{{ .Values.tag.makeSlave }}
        env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: "v1"
                fieldPath: metadata.namespace
        volumeMounts:
        - name: config
          mountPath: /config
      volumes:
      - name: config
        emptyDir: {}